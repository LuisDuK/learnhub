import { DashboardLayout } from "@/components/DashboardLayout";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
import { 
  ChartContainer, 
  ChartTooltip, 
  ChartTooltipContent,
  ChartLegend,
  ChartLegendContent 
} from "@/components/ui/chart";
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";
import { 
  TrendingUp, 
  Calculator, 
  BookOpen, 
  Globe, 
  AlertTriangle,
  Trophy,
  Target,
  Clock,
  Sparkles
} from "lucide-react";
import { 
  BarChart, 
  Bar, 
  XAxis, 
  YAxis, 
  CartesianGrid, 
  ResponsiveContainer,
  PieChart,
  Pie,
  Cell
} from "recharts";

// Mock data for the three subjects
const subjectProgress = [
  { subject: "To√°n", completed: 85, total: 100, emoji: "üî¢" },
  { subject: "VƒÉn", completed: 72, total: 100, emoji: "üìö" },
  { subject: "Anh", completed: 65, total: 100, emoji: "üåç" }
];

const timeDistribution = [
  { subject: "To√°n", hours: 45, emoji: "üî¢", color: "#3B82F6" },
  { subject: "VƒÉn", hours: 35, emoji: "üìö", color: "#10B981" },
  { subject: "Anh", hours: 25, emoji: "üåç", color: "#8B5CF6" }
];

const detailedProgress = [
  {
    subject: "To√°n",
    emoji: "üî¢",
    completedSessions: 34,
    totalSessions: 40,
    averageScore: 8.5,
    status: "T·ªët",
    statusColor: "bg-green-100 text-green-700",
    lastStudy: "H√¥m qua"
  },
  {
    subject: "VƒÉn", 
    emoji: "üìö",
    completedSessions: 29,
    totalSessions: 40,
    averageScore: 7.2,
    status: "Kh√°",
    statusColor: "bg-blue-100 text-blue-700",
    lastStudy: "2 ng√†y tr∆∞·ªõc"
  },
  {
    subject: "Anh",
    emoji: "üåç", 
    completedSessions: 26,
    totalSessions: 40,
    averageScore: 6.5,
    status: "C·∫ßn c·∫£i thi·ªán",
    statusColor: "bg-yellow-100 text-yellow-700",
    lastStudy: "3 ng√†y tr∆∞·ªõc"
  }
];

const chartConfig = {
  completed: {
    label: "Ho√†n th√†nh (%)",
    color: "hsl(var(--primary))",
  }
};

const pieChartConfig = {
  hours: {
    label: "Gi·ªù h·ªçc",
  }
};

export default function Progress() {
  // Calculate overall progress
  const totalCompleted = subjectProgress.reduce((acc, subject) => acc + subject.completed, 0);
  const totalPossible = subjectProgress.reduce((acc, subject) => acc + subject.total, 0);
  const overallProgress = Math.round((totalCompleted / totalPossible) * 100);

  // Find weak subjects (below 70%)
  const weakSubjects = detailedProgress.filter(subject => subject.averageScore < 7.0);

  return (
    <DashboardLayout>
      <div className="flex-1 space-y-6 p-6 bg-gradient-to-br from-background via-accent/5 to-primary/5">
        {/* Header */}
        <div>
          <h1 className="text-3xl font-bold bg-gradient-to-r from-primary to-accent bg-clip-text text-transparent flex items-center gap-2">
            üìä B√°o c√°o ti·∫øn ƒë·ªô h·ªçc t·∫≠p
            <Sparkles className="h-8 w-8 text-primary animate-pulse" />
          </h1>
          <p className="text-gray-600 text-lg mt-1">
            Theo d√µi ti·∫øn ƒë·ªô h·ªçc t·∫≠p c·ªßa b√© qua c√°c m√¥n h·ªçc
          </p>
        </div>

        {/* Overall Progress & Warnings */}
        <div className="grid gap-6 lg:grid-cols-3">
          <Card className="lg:col-span-2 border-primary/20 shadow-lg bg-gradient-to-br from-white to-primary/5">
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Trophy className="h-5 w-5 text-primary" />
                üéØ T·ªïng quan ti·∫øn ƒë·ªô
              </CardTitle>
              <CardDescription>Ti·∫øn ƒë·ªô h·ªçc t·∫≠p t·ªïng th·ªÉ c·ªßa b√©</CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="text-center">
                <div className="text-4xl font-bold text-primary mb-2">{overallProgress}%</div>
                <p className="text-muted-foreground">Ti·∫øn ƒë·ªô t·ªïng th·ªÉ</p>
              </div>
              <Progress value={overallProgress} className="h-4" />
              <div className="grid grid-cols-3 gap-4 text-center">
                {subjectProgress.map((subject) => (
                  <div key={subject.subject} className="space-y-2">
                    <div className="text-2xl">{subject.emoji}</div>
                    <div className="font-semibold">{subject.subject}</div>
                    <div className="text-lg font-bold text-primary">{subject.completed}%</div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>

          <div className="space-y-4">
            {/* Warning for weak subjects */}
            {weakSubjects.length > 0 && (
              <Alert className="border-yellow-200 bg-yellow-50">
                <AlertTriangle className="h-4 w-4 text-yellow-600" />
                <AlertTitle className="text-yellow-800">‚ö†Ô∏è C·∫ßn ch√∫ √Ω!</AlertTitle>
                <AlertDescription className="text-yellow-700">
                  {weakSubjects.map((subject, index) => (
                    <div key={subject.subject}>
                      {subject.emoji} ƒêi·ªÉm {subject.subject} th·∫•p h∆°n m·ª•c ti√™u (${subject.averageScore}/10)
                      {index < weakSubjects.length - 1 && <br />}
                    </div>
                  ))}
                </AlertDescription>
              </Alert>
            )}

            {/* Study streak */}
            <Card className="border-accent/20 shadow-lg bg-gradient-to-br from-white to-accent/5">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Target className="h-5 w-5 text-accent" />
                  üî• Chu·ªói h·ªçc t·∫≠p
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-center">
                  <div className="text-3xl font-bold text-accent">7</div>
                  <p className="text-sm text-muted-foreground">ng√†y li√™n ti·∫øp</p>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* Charts Section */}
        <div className="grid gap-6 lg:grid-cols-2">
          {/* Bar Chart - Progress by Subject */}
          <Card className="border-secondary/20 shadow-lg bg-gradient-to-br from-white to-secondary/5">
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <TrendingUp className="h-5 w-5 text-secondary" />
                üìà Ti·∫øn ƒë·ªô theo m√¥n h·ªçc
              </CardTitle>
              <CardDescription>Ph·∫ßn trƒÉm ho√†n th√†nh c√°c b√†i h·ªçc</CardDescription>
            </CardHeader>
            <CardContent>
              <ChartContainer config={chartConfig} className="h-[300px]">
                <BarChart data={subjectProgress}>
                  <CartesianGrid strokeDasharray="3 3" />
                  <XAxis 
                    dataKey="subject" 
                    tick={{fontSize: 12}}
                    tickFormatter={(value) => {
                      const subject = subjectProgress.find(s => s.subject === value);
                      return subject ? `${subject.emoji} ${value}` : value;
                    }}
                  />
                  <YAxis domain={[0, 100]} />
                  <ChartTooltip 
                    content={<ChartTooltipContent />}
                    formatter={(value) => [`${value}%`, "Ho√†n th√†nh"]}
                  />
                  <Bar dataKey="completed" fill="var(--color-completed)" radius={8} />
                </BarChart>
              </ChartContainer>
            </CardContent>
          </Card>

          {/* Pie Chart - Time Distribution */}
          <Card className="border-primary/20 shadow-lg bg-gradient-to-br from-white to-primary/5">
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Clock className="h-5 w-5 text-primary" />
                ‚è∞ Ph√¢n b·ªï th·ªùi gian h·ªçc
              </CardTitle>
              <CardDescription>Th·ªùi gian h·ªçc theo t·ª´ng m√¥n (gi·ªù)</CardDescription>
            </CardHeader>
            <CardContent>
              <ChartContainer config={pieChartConfig} className="h-[300px]">
                <PieChart>
                  <Pie
                    data={timeDistribution}
                    cx="50%"
                    cy="50%"
                    labelLine={false}
                    label={({ subject, hours, percent }) => `${subject}: ${hours}h (${(percent * 100).toFixed(0)}%)`}
                    outerRadius={80}
                    fill="#8884d8"
                    dataKey="hours"
                  >
                    {timeDistribution.map((entry, index) => (
                      <Cell key={`cell-${index}`} fill={entry.color} />
                    ))}
                  </Pie>
                  <ChartTooltip 
                    content={<ChartTooltipContent />}
                    formatter={(value) => [`${value} gi·ªù`, "Th·ªùi gian h·ªçc"]}
                  />
                </PieChart>
              </ChartContainer>
            </CardContent>
          </Card>
        </div>

        {/* Detailed Progress Table */}
        <Card className="border-accent/20 shadow-lg bg-gradient-to-br from-white to-accent/5">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <BookOpen className="h-5 w-5 text-accent" />
              üìã B·∫£ng chi ti·∫øt ti·∫øn ƒë·ªô
            </CardTitle>
            <CardDescription>Th√¥ng tin chi ti·∫øt v·ªÅ t·ª´ng m√¥n h·ªçc</CardDescription>
          </CardHeader>
          <CardContent>
            <Table>
              <TableHeader>
                <TableRow>
                  <TableHead>M√¥n h·ªçc</TableHead>
                  <TableHead>Bu·ªïi h·ªçc</TableHead>
                  <TableHead>ƒêi·ªÉm TB</TableHead>
                  <TableHead>Tr·∫°ng th√°i</TableHead>
                  <TableHead>H·ªçc l·∫ßn cu·ªëi</TableHead>
                </TableRow>
              </TableHeader>
              <TableBody>
                {detailedProgress.map((subject) => (
                  <TableRow key={subject.subject}>
                    <TableCell className="font-medium">
                      <div className="flex items-center gap-2">
                        <span className="text-lg">{subject.emoji}</span>
                        <span>{subject.subject}</span>
                      </div>
                    </TableCell>
                    <TableCell>
                      <div className="space-y-1">
                        <div className="text-sm font-medium">
                          {subject.completedSessions}/{subject.totalSessions}
                        </div>
                        <Progress 
                          value={(subject.completedSessions / subject.totalSessions) * 100} 
                          className="h-2 w-20" 
                        />
                      </div>
                    </TableCell>
                    <TableCell>
                      <div className="flex items-center gap-1">
                        <span className="font-semibold">{subject.averageScore}</span>
                        <span className="text-muted-foreground">/10</span>
                        {subject.averageScore >= 8 && <span>üåü</span>}
                        {subject.averageScore >= 7 && subject.averageScore < 8 && <span>üëç</span>}
                        {subject.averageScore < 7 && <span>üìö</span>}
                      </div>
                    </TableCell>
                    <TableCell>
                      <Badge variant="outline" className={subject.statusColor}>
                        {subject.status}
                      </Badge>
                    </TableCell>
                    <TableCell className="text-muted-foreground">
                      {subject.lastStudy}
                    </TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          </CardContent>
        </Card>

        {/* Achievements Section */}
        <Card className="border-primary/20 shadow-lg bg-gradient-to-br from-white to-primary/5">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Trophy className="h-5 w-5 text-primary" />
              üèÜ Th√†nh t√≠ch g·∫ßn ƒë√¢y
            </CardTitle>
            <CardDescription>Nh·ªØng c·ªôt m·ªëc b√© ƒë√£ ƒë·∫°t ƒë∆∞·ª£c</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="grid gap-4 md:grid-cols-3">
              <div className="text-center p-4 rounded-xl bg-yellow-50 border border-yellow-200">
                <div className="text-3xl mb-2">ü•á</div>
                <div className="font-semibold text-yellow-800">H·ªçc sinh gi·ªèi To√°n</div>
                <div className="text-sm text-yellow-600">ƒê·∫°t ƒëi·ªÉm trung b√¨nh 8.5</div>
              </div>
              <div className="text-center p-4 rounded-xl bg-blue-50 border border-blue-200">
                <div className="text-3xl mb-2">üìö</div>
                <div className="font-semibold text-blue-800">Ho√†n th√†nh 50 b√†i h·ªçc</div>
                <div className="text-sm text-blue-600">C·ªôt m·ªëc quan tr·ªçng!</div>
              </div>
              <div className="text-center p-4 rounded-xl bg-green-50 border border-green-200">
                <div className="text-3xl mb-2">üî•</div>
                <div className="font-semibold text-green-800">Streak 7 ng√†y</div>
                <div className="text-sm text-green-600">H·ªçc ƒë·ªÅu ƒë·∫∑n m·ªói ng√†y</div>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </DashboardLayout>
  );
}
